### YamlMime:ManagedReference
items:
- uid: Borks_WPF.Model.Customer
  commentId: T:Borks_WPF.Model.Customer
  id: Customer
  parent: Borks_WPF.Model
  children:
  - Borks_WPF.Model.Customer.#ctor
  - Borks_WPF.Model.Customer.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - Borks_WPF.Model.Customer.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - Borks_WPF.Model.Customer.Address
  - Borks_WPF.Model.Customer.City
  - Borks_WPF.Model.Customer.Email
  - Borks_WPF.Model.Customer.FirstName
  - Borks_WPF.Model.Customer.Id
  - Borks_WPF.Model.Customer.LastName
  - Borks_WPF.Model.Customer.Phone
  - Borks_WPF.Model.Customer.PostalCode
  langs:
  - csharp
  - vb
  name: Customer
  nameWithType: Customer
  fullName: Borks_WPF.Model.Customer
  type: Class
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: Customer
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 11
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Klassen for kunden
  example: []
  syntax:
    content: public class Customer
    content.vb: Public Class Customer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Borks_WPF.Model.Customer.Id
  commentId: P:Borks_WPF.Model.Customer.Id
  id: Id
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Customer.Id
  fullName: Borks_WPF.Model.Customer.Id
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: Id
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 17
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde objektet's Id Property
  example: []
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Borks_WPF.Model.Customer.Id*
- uid: Borks_WPF.Model.Customer.FirstName
  commentId: P:Borks_WPF.Model.Customer.FirstName
  id: FirstName
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: Customer.FirstName
  fullName: Borks_WPF.Model.Customer.FirstName
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: FirstName
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 21
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde objektet's First Name Property
  example: []
  syntax:
    content: public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FirstName As String
  overload: Borks_WPF.Model.Customer.FirstName*
- uid: Borks_WPF.Model.Customer.LastName
  commentId: P:Borks_WPF.Model.Customer.LastName
  id: LastName
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: Customer.LastName
  fullName: Borks_WPF.Model.Customer.LastName
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: LastName
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 25
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde objektet's Last Name Property
  example: []
  syntax:
    content: public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LastName As String
  overload: Borks_WPF.Model.Customer.LastName*
- uid: Borks_WPF.Model.Customer.Address
  commentId: P:Borks_WPF.Model.Customer.Address
  id: Address
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Customer.Address
  fullName: Borks_WPF.Model.Customer.Address
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: Address
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 29
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde objektet's Adresse Property
  example: []
  syntax:
    content: public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Address As String
  overload: Borks_WPF.Model.Customer.Address*
- uid: Borks_WPF.Model.Customer.City
  commentId: P:Borks_WPF.Model.Customer.City
  id: City
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: City
  nameWithType: Customer.City
  fullName: Borks_WPF.Model.Customer.City
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: City
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 33
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde objektet's City Property
  example: []
  syntax:
    content: public string City { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property City As String
  overload: Borks_WPF.Model.Customer.City*
- uid: Borks_WPF.Model.Customer.Phone
  commentId: P:Borks_WPF.Model.Customer.Phone
  id: Phone
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: Customer.Phone
  fullName: Borks_WPF.Model.Customer.Phone
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: Phone
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 37
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde objektet's Telefon Property
  example: []
  syntax:
    content: public string Phone { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Phone As String
  overload: Borks_WPF.Model.Customer.Phone*
- uid: Borks_WPF.Model.Customer.PostalCode
  commentId: P:Borks_WPF.Model.Customer.PostalCode
  id: PostalCode
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: PostalCode
  nameWithType: Customer.PostalCode
  fullName: Borks_WPF.Model.Customer.PostalCode
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: PostalCode
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 41
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde objektet's Postnummer Property
  example: []
  syntax:
    content: public string PostalCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PostalCode As String
  overload: Borks_WPF.Model.Customer.PostalCode*
- uid: Borks_WPF.Model.Customer.Email
  commentId: P:Borks_WPF.Model.Customer.Email
  id: Email
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: Customer.Email
  fullName: Borks_WPF.Model.Customer.Email
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: Email
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 45
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde objektet's Email Property
  example: []
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Borks_WPF.Model.Customer.Email*
- uid: Borks_WPF.Model.Customer.#ctor
  commentId: M:Borks_WPF.Model.Customer.#ctor
  id: '#ctor'
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: Customer()
  nameWithType: Customer.Customer()
  fullName: Borks_WPF.Model.Customer.Customer()
  type: Constructor
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: .ctor
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 52
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde klassens constructor
  example: []
  syntax:
    content: public Customer()
    content.vb: Public Sub New()
  overload: Borks_WPF.Model.Customer.#ctor*
  nameWithType.vb: Customer.New()
  fullName.vb: Borks_WPF.Model.Customer.New()
  name.vb: New()
- uid: Borks_WPF.Model.Customer.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Borks_WPF.Model.Customer.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: Customer(string, string, string, string, string, string, string)
  nameWithType: Customer.Customer(string, string, string, string, string, string, string)
  fullName: Borks_WPF.Model.Customer.Customer(string, string, string, string, string, string, string)
  type: Constructor
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: .ctor
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 66
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Angiver en constructor til Kunde-klassen, der tager imod et fornavn, et efternavn, en adresse, en by, et telefonnummer, et postnummer og en email.
  example: []
  syntax:
    content: public Customer(string firstName, string lastName, string address, string city, string phone, string postalCode, string email)
    parameters:
    - id: firstName
      type: System.String
      description: Streng der repræsenterer et fornavn
    - id: lastName
      type: System.String
      description: Streng der repræsenterer et efternavn
    - id: address
      type: System.String
      description: Streng der repræsenterer en adresse
    - id: city
      type: System.String
      description: Streng der repræsenterer en by
    - id: phone
      type: System.String
      description: Streng der repræsenterer et telefonnummer
    - id: postalCode
      type: System.String
      description: Streng der repræsenterer et postnummer
    - id: email
      type: System.String
      description: Streng der repræsenterer en email
    content.vb: Public Sub New(firstName As String, lastName As String, address As String, city As String, phone As String, postalCode As String, email As String)
  overload: Borks_WPF.Model.Customer.#ctor*
  nameWithType.vb: Customer.New(String, String, String, String, String, String, String)
  fullName.vb: Borks_WPF.Model.Customer.New(String, String, String, String, String, String, String)
  name.vb: New(String, String, String, String, String, String, String)
- uid: Borks_WPF.Model.Customer.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:Borks_WPF.Model.Customer.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)'
  parent: Borks_WPF.Model.Customer
  langs:
  - csharp
  - vb
  name: Customer(int, string, string, string, string, string, string, string)
  nameWithType: Customer.Customer(int, string, string, string, string, string, string, string)
  fullName: Borks_WPF.Model.Customer.Customer(int, string, string, string, string, string, string, string)
  type: Constructor
  source:
    remote:
      path: Borks_WPF/Model/Customer.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: .ctor
    path: ../BorksKonservering/Borks_WPF/Model/Customer.cs
    startLine: 90
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Kunde klassens constructor som er overloaded
  example: []
  syntax:
    content: public Customer(int id, string firstName, string lastName, string address, string city, string phone, string postalCode, string email)
    parameters:
    - id: id
      type: System.Int32
      description: Heltal der repræsenterer et Kunde-id
    - id: firstName
      type: System.String
      description: Fornavnetet i kundeobjektet
    - id: lastName
      type: System.String
      description: Efternavnetet i kundeobjektet
    - id: address
      type: System.String
      description: Adressen i kundeobjektet
    - id: city
      type: System.String
      description: Byen i kundeobjektet
    - id: phone
      type: System.String
      description: Telefonnummeret i kundeobjektet
    - id: postalCode
      type: System.String
      description: Postnummeret i kundeobjektet
    - id: email
      type: System.String
      description: Emailen i kundeobjektet
    content.vb: Public Sub New(id As Integer, firstName As String, lastName As String, address As String, city As String, phone As String, postalCode As String, email As String)
  overload: Borks_WPF.Model.Customer.#ctor*
  nameWithType.vb: Customer.New(Integer, String, String, String, String, String, String, String)
  fullName.vb: Borks_WPF.Model.Customer.New(Integer, String, String, String, String, String, String, String)
  name.vb: New(Integer, String, String, String, String, String, String, String)
references:
- uid: Borks_WPF.Model
  commentId: N:Borks_WPF.Model
  href: Borks_WPF.html
  name: Borks_WPF.Model
  nameWithType: Borks_WPF.Model
  fullName: Borks_WPF.Model
  spec.csharp:
  - uid: Borks_WPF
    name: Borks_WPF
    href: Borks_WPF.html
  - name: .
  - uid: Borks_WPF.Model
    name: Model
    href: Borks_WPF.Model.html
  spec.vb:
  - uid: Borks_WPF
    name: Borks_WPF
    href: Borks_WPF.html
  - name: .
  - uid: Borks_WPF.Model
    name: Model
    href: Borks_WPF.Model.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Borks_WPF.Model.Customer.Id*
  commentId: Overload:Borks_WPF.Model.Customer.Id
  href: Borks_WPF.Model.Customer.html#Borks_WPF_Model_Customer_Id
  name: Id
  nameWithType: Customer.Id
  fullName: Borks_WPF.Model.Customer.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Borks_WPF.Model.Customer.FirstName*
  commentId: Overload:Borks_WPF.Model.Customer.FirstName
  href: Borks_WPF.Model.Customer.html#Borks_WPF_Model_Customer_FirstName
  name: FirstName
  nameWithType: Customer.FirstName
  fullName: Borks_WPF.Model.Customer.FirstName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Borks_WPF.Model.Customer.LastName*
  commentId: Overload:Borks_WPF.Model.Customer.LastName
  href: Borks_WPF.Model.Customer.html#Borks_WPF_Model_Customer_LastName
  name: LastName
  nameWithType: Customer.LastName
  fullName: Borks_WPF.Model.Customer.LastName
- uid: Borks_WPF.Model.Customer.Address*
  commentId: Overload:Borks_WPF.Model.Customer.Address
  href: Borks_WPF.Model.Customer.html#Borks_WPF_Model_Customer_Address
  name: Address
  nameWithType: Customer.Address
  fullName: Borks_WPF.Model.Customer.Address
- uid: Borks_WPF.Model.Customer.City*
  commentId: Overload:Borks_WPF.Model.Customer.City
  href: Borks_WPF.Model.Customer.html#Borks_WPF_Model_Customer_City
  name: City
  nameWithType: Customer.City
  fullName: Borks_WPF.Model.Customer.City
- uid: Borks_WPF.Model.Customer.Phone*
  commentId: Overload:Borks_WPF.Model.Customer.Phone
  href: Borks_WPF.Model.Customer.html#Borks_WPF_Model_Customer_Phone
  name: Phone
  nameWithType: Customer.Phone
  fullName: Borks_WPF.Model.Customer.Phone
- uid: Borks_WPF.Model.Customer.PostalCode*
  commentId: Overload:Borks_WPF.Model.Customer.PostalCode
  href: Borks_WPF.Model.Customer.html#Borks_WPF_Model_Customer_PostalCode
  name: PostalCode
  nameWithType: Customer.PostalCode
  fullName: Borks_WPF.Model.Customer.PostalCode
- uid: Borks_WPF.Model.Customer.Email*
  commentId: Overload:Borks_WPF.Model.Customer.Email
  href: Borks_WPF.Model.Customer.html#Borks_WPF_Model_Customer_Email
  name: Email
  nameWithType: Customer.Email
  fullName: Borks_WPF.Model.Customer.Email
- uid: Borks_WPF.Model.Customer.#ctor*
  commentId: Overload:Borks_WPF.Model.Customer.#ctor
  href: Borks_WPF.Model.Customer.html#Borks_WPF_Model_Customer__ctor
  name: Customer
  nameWithType: Customer.Customer
  fullName: Borks_WPF.Model.Customer.Customer
  nameWithType.vb: Customer.New
  fullName.vb: Borks_WPF.Model.Customer.New
  name.vb: New
