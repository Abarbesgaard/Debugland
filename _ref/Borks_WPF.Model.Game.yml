### YamlMime:ManagedReference
items:
- uid: Borks_WPF.Model.Game
  commentId: T:Borks_WPF.Model.Game
  id: Game
  parent: Borks_WPF.Model
  children:
  - Borks_WPF.Model.Game.#ctor
  - Borks_WPF.Model.Game.#ctor(System.Int32,System.String,Borks_WPF.Model.EnumGameCategory)
  - Borks_WPF.Model.Game.#ctor(System.String,Borks_WPF.Model.EnumGameCategory)
  - Borks_WPF.Model.Game.GameCategory
  - Borks_WPF.Model.Game.Id
  - Borks_WPF.Model.Game.Species
  langs:
  - csharp
  - vb
  name: Game
  nameWithType: Game
  fullName: Borks_WPF.Model.Game
  type: Class
  source:
    remote:
      path: Borks_WPF/Model/Game.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: Game
    path: ../BorksKonservering/Borks_WPF/Model/Game.cs
    startLine: 11
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Klassen for Vildt
  example: []
  syntax:
    content: public class Game
    content.vb: Public Class Game
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Borks_WPF.Model.Game.Id
  commentId: P:Borks_WPF.Model.Game.Id
  id: Id
  parent: Borks_WPF.Model.Game
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Game.Id
  fullName: Borks_WPF.Model.Game.Id
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Game.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: Id
    path: ../BorksKonservering/Borks_WPF/Model/Game.cs
    startLine: 17
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Vildt klassen Id Property
  example: []
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Borks_WPF.Model.Game.Id*
- uid: Borks_WPF.Model.Game.Species
  commentId: P:Borks_WPF.Model.Game.Species
  id: Species
  parent: Borks_WPF.Model.Game
  langs:
  - csharp
  - vb
  name: Species
  nameWithType: Game.Species
  fullName: Borks_WPF.Model.Game.Species
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Game.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: Species
    path: ../BorksKonservering/Borks_WPF/Model/Game.cs
    startLine: 21
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Vildt klassen Species Property
  example: []
  syntax:
    content: public string? Species { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Species As String
  overload: Borks_WPF.Model.Game.Species*
- uid: Borks_WPF.Model.Game.GameCategory
  commentId: P:Borks_WPF.Model.Game.GameCategory
  id: GameCategory
  parent: Borks_WPF.Model.Game
  langs:
  - csharp
  - vb
  name: GameCategory
  nameWithType: Game.GameCategory
  fullName: Borks_WPF.Model.Game.GameCategory
  type: Property
  source:
    remote:
      path: Borks_WPF/Model/Game.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: GameCategory
    path: ../BorksKonservering/Borks_WPF/Model/Game.cs
    startLine: 25
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Vildt klassen GameCategory Property
  example: []
  syntax:
    content: public EnumGameCategory GameCategory { get; set; }
    parameters: []
    return:
      type: Borks_WPF.Model.EnumGameCategory
    content.vb: Public Property GameCategory As EnumGameCategory
  overload: Borks_WPF.Model.Game.GameCategory*
- uid: Borks_WPF.Model.Game.#ctor
  commentId: M:Borks_WPF.Model.Game.#ctor
  id: '#ctor'
  parent: Borks_WPF.Model.Game
  langs:
  - csharp
  - vb
  name: Game()
  nameWithType: Game.Game()
  fullName: Borks_WPF.Model.Game.Game()
  type: Constructor
  source:
    remote:
      path: Borks_WPF/Model/Game.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: .ctor
    path: ../BorksKonservering/Borks_WPF/Model/Game.cs
    startLine: 33
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Angiver en tom constructor til Vildt-klassen.
  example: []
  syntax:
    content: public Game()
    content.vb: Public Sub New()
  overload: Borks_WPF.Model.Game.#ctor*
  nameWithType.vb: Game.New()
  fullName.vb: Borks_WPF.Model.Game.New()
  name.vb: New()
- uid: Borks_WPF.Model.Game.#ctor(System.String,Borks_WPF.Model.EnumGameCategory)
  commentId: M:Borks_WPF.Model.Game.#ctor(System.String,Borks_WPF.Model.EnumGameCategory)
  id: '#ctor(System.String,Borks_WPF.Model.EnumGameCategory)'
  parent: Borks_WPF.Model.Game
  langs:
  - csharp
  - vb
  name: Game(string, EnumGameCategory)
  nameWithType: Game.Game(string, EnumGameCategory)
  fullName: Borks_WPF.Model.Game.Game(string, Borks_WPF.Model.EnumGameCategory)
  type: Constructor
  source:
    remote:
      path: Borks_WPF/Model/Game.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: .ctor
    path: ../BorksKonservering/Borks_WPF/Model/Game.cs
    startLine: 42
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Angiver en constructor til Vildt-klassen, der tager imod en art og en Vildt kategori.
  example: []
  syntax:
    content: public Game(string species, EnumGameCategory gameCategory)
    parameters:
    - id: species
      type: System.String
      description: Streng der repræsenterer en art
    - id: gameCategory
      type: Borks_WPF.Model.EnumGameCategory
      description: Enum der repræsenterer en Vildt kategori
    content.vb: Public Sub New(species As String, gameCategory As EnumGameCategory)
  overload: Borks_WPF.Model.Game.#ctor*
  nameWithType.vb: Game.New(String, EnumGameCategory)
  fullName.vb: Borks_WPF.Model.Game.New(String, Borks_WPF.Model.EnumGameCategory)
  name.vb: New(String, EnumGameCategory)
- uid: Borks_WPF.Model.Game.#ctor(System.Int32,System.String,Borks_WPF.Model.EnumGameCategory)
  commentId: M:Borks_WPF.Model.Game.#ctor(System.Int32,System.String,Borks_WPF.Model.EnumGameCategory)
  id: '#ctor(System.Int32,System.String,Borks_WPF.Model.EnumGameCategory)'
  parent: Borks_WPF.Model.Game
  langs:
  - csharp
  - vb
  name: Game(int, string, EnumGameCategory)
  nameWithType: Game.Game(int, string, EnumGameCategory)
  fullName: Borks_WPF.Model.Game.Game(int, string, Borks_WPF.Model.EnumGameCategory)
  type: Constructor
  source:
    remote:
      path: Borks_WPF/Model/Game.cs
      branch: master
      repo: https://github.com/Abarbesgaard/BorksKonservering
    id: .ctor
    path: ../BorksKonservering/Borks_WPF/Model/Game.cs
    startLine: 54
  assemblies:
  - Borks_WPF
  namespace: Borks_WPF.Model
  summary: Angiver en constructor til Vildt-klassen, der tager imod et Vildt-id, en art og en Vildt kategori.
  example: []
  syntax:
    content: public Game(int id, string species, EnumGameCategory gameCategory)
    parameters:
    - id: id
      type: System.Int32
      description: Heltal der repræsenterer et Vildt-id
    - id: species
      type: System.String
      description: Streng der repræsenterer en art
    - id: gameCategory
      type: Borks_WPF.Model.EnumGameCategory
      description: Enum der repræsenterer en Vildt kategori
    content.vb: Public Sub New(id As Integer, species As String, gameCategory As EnumGameCategory)
  overload: Borks_WPF.Model.Game.#ctor*
  nameWithType.vb: Game.New(Integer, String, EnumGameCategory)
  fullName.vb: Borks_WPF.Model.Game.New(Integer, String, Borks_WPF.Model.EnumGameCategory)
  name.vb: New(Integer, String, EnumGameCategory)
references:
- uid: Borks_WPF.Model
  commentId: N:Borks_WPF.Model
  href: Borks_WPF.html
  name: Borks_WPF.Model
  nameWithType: Borks_WPF.Model
  fullName: Borks_WPF.Model
  spec.csharp:
  - uid: Borks_WPF
    name: Borks_WPF
    href: Borks_WPF.html
  - name: .
  - uid: Borks_WPF.Model
    name: Model
    href: Borks_WPF.Model.html
  spec.vb:
  - uid: Borks_WPF
    name: Borks_WPF
    href: Borks_WPF.html
  - name: .
  - uid: Borks_WPF.Model
    name: Model
    href: Borks_WPF.Model.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Borks_WPF.Model.Game.Id*
  commentId: Overload:Borks_WPF.Model.Game.Id
  href: Borks_WPF.Model.Game.html#Borks_WPF_Model_Game_Id
  name: Id
  nameWithType: Game.Id
  fullName: Borks_WPF.Model.Game.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Borks_WPF.Model.Game.Species*
  commentId: Overload:Borks_WPF.Model.Game.Species
  href: Borks_WPF.Model.Game.html#Borks_WPF_Model_Game_Species
  name: Species
  nameWithType: Game.Species
  fullName: Borks_WPF.Model.Game.Species
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Borks_WPF.Model.Game.GameCategory*
  commentId: Overload:Borks_WPF.Model.Game.GameCategory
  href: Borks_WPF.Model.Game.html#Borks_WPF_Model_Game_GameCategory
  name: GameCategory
  nameWithType: Game.GameCategory
  fullName: Borks_WPF.Model.Game.GameCategory
- uid: Borks_WPF.Model.EnumGameCategory
  commentId: T:Borks_WPF.Model.EnumGameCategory
  parent: Borks_WPF.Model
  href: Borks_WPF.Model.EnumGameCategory.html
  name: EnumGameCategory
  nameWithType: EnumGameCategory
  fullName: Borks_WPF.Model.EnumGameCategory
- uid: Borks_WPF.Model.Game.#ctor*
  commentId: Overload:Borks_WPF.Model.Game.#ctor
  href: Borks_WPF.Model.Game.html#Borks_WPF_Model_Game__ctor
  name: Game
  nameWithType: Game.Game
  fullName: Borks_WPF.Model.Game.Game
  nameWithType.vb: Game.New
  fullName.vb: Borks_WPF.Model.Game.New
  name.vb: New
